

    /* non-terminal types for %%union{} */
    Module* _mod_;
    ModuleList* _modlis_;
    CompoundName* _comnam_;
    ScopeOperator* _scoope_;
    TypeDefinition* _typdef_;
    ConstantExpression* _conexp_;
    SymbolType* _symtyp_;
    CastSpecifier* _casspe_;
    CompoundNameInParensRule* _comnaminparrul_;
    ArrayReference* _arrref_;
    ExpressionFactor* _expfac_;
    Expression* _exp_;
    ExpressionList* _explis_;
    ExpressionInParensRule* _expinparrul_;
    ExpressionListInParens* _explisinpar_;
    FuncReference* _funref_;
    NamespaceDefinition* _namdef_;
    ClassNameParent* _clanampar_;
    ClassName* _clanam_;
    ClassDefinition* _cladef_;
    ClassDefinitionList* _cladeflis_;
    EmptyParensRule* _empparrul_;
    FuncDeclParameterList* _fundecparlis_;
    ConstructorDecl* _condec_;
    DestructorDecl* _desdec_;
    SymbolDeclaration* _symdec_;
    StructDeclaration* _strdec_;
    StructBody* _strbod_;
    MethodDeclaration* _metdec_;
    ParameterDefList* _pardeflis_;
    ParameterDeclElement* _pardecele_;
    ParameterDeclList* _pardeclis_;
    ArrayInitializer* _arrini_;
    DictInitItem* _diciniite_;
    DictInitElement* _diciniele_;
    DictInitList* _dicinilis_;
    DictInitializer* _dicini_;
    Initialzer* _ini_;
    DataDefinition* _datdef_;
    FuncDefParameterList* _fundefparlis_;
    FuncBodyStatementList* _funbodstalis_;
    FuncBody* _funbod_;
    FuncDefinition* _fundef_;
    BreakStatement* _bresta_;
    ContinueStatement* _consta_;
    YieldStatement* _yiesta_;
    ExceptClause* _exccla_;
    ExceptClauseIntermediateList* _excclaintlis_;
    ExceptClauseFinal* _excclafin_;
    ExceptClauseList* _excclalis_;
    TryStatement* _trysta_;
    ElseClause* _elscla_;
    ElseClauseIntermediateList* _elsclaintlis_;
    ElseClauseFinal* _elsclafin_;
    ElseClauseList* _elsclalis_;
    IfClause* _ifcla_;
    IfStatement* _ifsta_;
    ForStatement* _forsta_;
    WhileStatement* _whista_;
    CaseClause* _cascla_;
    CaseClauseIntermediateList* _casclaintlis_;
    CaseClauseList* _casclalis_;
    SwitchStatement* _swista_;
    DoStatement* _dosta_;
    ArrayParameter* _arrpar_;
    ArrayParameterList* _arrparlis_;
    ClassDefinitionItem* _cladefite_;
    ModuleItem* _modite_;
    TraceStatement* _trasta_;
    ReturnStatement* _retsta_;
    PrintStatement* _prista_;
    ExitStatement* _exista_;
    RaiseStatement* _raista_;
    TypeStatement* _typsta_;
    Assignment* _ass_;
    FuncBodyStatement* _funbodsta_;


    /* non-terminal definitions */
%type<_mod_> module
%type<_modlis_> module_list
%type<_comnam_> compound_name
%type<_scoope_> scope_operator
%type<_typdef_> type_definition
%type<_conexp_> constant_expression
%type<_symtyp_> symbol_type
%type<_casspe_> cast_specifier
%type<_comnaminparrul_> compound_name_in_parens_rule
%type<_arrref_> array_reference
%type<_expfac_> expression_factor
%type<_exp_> expression
%type<_explis_> expression_list
%type<_expinparrul_> expression_in_parens_rule
%type<_explisinpar_> expression_list_in_parens
%type<_funref_> func_reference
%type<_namdef_> namespace_definition
%type<_clanampar_> class_name_parent
%type<_clanam_> class_name
%type<_cladef_> class_definition
%type<_cladeflis_> class_definition_list
%type<_empparrul_> empty_parens_rule
%type<_fundecparlis_> func_decl_parameter_list
%type<_condec_> constructor_decl
%type<_desdec_> destructor_decl
%type<_symdec_> symbol_declaration
%type<_strdec_> struct_declaration
%type<_strbod_> struct_body
%type<_metdec_> method_declaration
%type<_pardeflis_> parameter_def_list
%type<_pardecele_> parameter_decl_element
%type<_pardeclis_> parameter_decl_list
%type<_arrini_> array_initializer
%type<_diciniite_> dict_init_item
%type<_diciniele_> dict_init_element
%type<_dicinilis_> dict_init_list
%type<_dicini_> dict_initializer
%type<_ini_> initialzer
%type<_datdef_> data_definition
%type<_fundefparlis_> func_def_parameter_list
%type<_funbodstalis_> func_body_statement_list
%type<_funbod_> func_body
%type<_fundef_> func_definition
%type<_bresta_> break_statement
%type<_consta_> continue_statement
%type<_yiesta_> yield_statement
%type<_exccla_> except_clause
%type<_excclaintlis_> except_clause_intermediate_list
%type<_excclafin_> except_clause_final
%type<_excclalis_> except_clause_list
%type<_trysta_> try_statement
%type<_elscla_> else_clause
%type<_elsclaintlis_> else_clause_intermediate_list
%type<_elsclafin_> else_clause_final
%type<_elsclalis_> else_clause_list
%type<_ifcla_> if_clause
%type<_ifsta_> if_statement
%type<_forsta_> for_statement
%type<_whista_> while_statement
%type<_cascla_> case_clause
%type<_casclaintlis_> case_clause_intermediate_list
%type<_casclalis_> case_clause_list
%type<_swista_> switch_statement
%type<_dosta_> do_statement
%type<_arrpar_> array_parameter
%type<_arrparlis_> array_parameter_list
%type<_cladefite_> class_definition_item
%type<_modite_> module_item
%type<_trasta_> trace_statement
%type<_retsta_> return_statement
%type<_prista_> print_statement
%type<_exista_> exit_statement
%type<_raista_> raise_statement
%type<_typsta_> type_statement
%type<_ass_> assignment
%type<_funbodsta_> func_body_statement


    # file names for CMakeLists.txt
    module.c
    module_list.c
    compound_name.c
    scope_operator.c
    type_definition.c
    constant_expression.c
    symbol_type.c
    cast_specifier.c
    compound_name_in_parens_rule.c
    array_reference.c
    expression_factor.c
    expression.c
    expression_list.c
    expression_in_parens_rule.c
    expression_list_in_parens.c
    func_reference.c
    namespace_definition.c
    class_name_parent.c
    class_name.c
    class_definition.c
    class_definition_list.c
    empty_parens_rule.c
    func_decl_parameter_list.c
    constructor_decl.c
    destructor_decl.c
    symbol_declaration.c
    struct_declaration.c
    struct_body.c
    method_declaration.c
    parameter_def_list.c
    parameter_decl_element.c
    parameter_decl_list.c
    array_initializer.c
    dict_init_item.c
    dict_init_element.c
    dict_init_list.c
    dict_initializer.c
    initialzer.c
    data_definition.c
    func_def_parameter_list.c
    func_body_statement_list.c
    func_body.c
    func_definition.c
    break_statement.c
    continue_statement.c
    yield_statement.c
    except_clause.c
    except_clause_intermediate_list.c
    except_clause_final.c
    except_clause_list.c
    try_statement.c
    else_clause.c
    else_clause_intermediate_list.c
    else_clause_final.c
    else_clause_list.c
    if_clause.c
    if_statement.c
    for_statement.c
    while_statement.c
    case_clause.c
    case_clause_intermediate_list.c
    case_clause_list.c
    switch_statement.c
    do_statement.c
    array_parameter.c
    array_parameter_list.c
    class_definition_item.c
    module_item.c
    trace_statement.c
    return_statement.c
    print_statement.c
    exit_statement.c
    raise_statement.c
    type_statement.c
    assignment.c
    func_body_statement.c


