/**
 * @file array_reference.h
 *
 * NOTE: This file is generated by the boilerplate functionality.
 */
#ifndef _ARRAY_REFERENCE_H_
#define _ARRAY_REFERENCE_H_

#include "ast.h"

typedef enum {
    ARRAY_REFERENCE_OK,
    ARRAY_REFERENCE_ERROR,
} ArrayReferenceType;

struct _array_reference_ {
    Ast ast;
    ArrayReferenceType type;
    CompoundName* compound_name;
    ArrayParameterList* array_parameter_list;
};

ArrayReference* createArrayReference(CompoundName*, ArrayParameterList*);
AstResult pass1ArrayReference(ArrayReference*);
AstResult pass2ArrayReference(ArrayReference*);
AstResult pass3ArrayReference(ArrayReference*);
AstResult emitArrayReference(ArrayReference*);
AstResult destroyArrayReference(ArrayReference*);

#ifdef ENABLE_DUMP
AstResult dumpArrayReference(ArrayReference* ptr);
#endif

#endif
