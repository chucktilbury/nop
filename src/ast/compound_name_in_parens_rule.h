/**
 * @file compound_name_in_parens_rule.h
 *
 * NOTE: This file is generated by the boilerplate functionality.
 */
#ifndef _COMPOUND_NAME_IN_PARENS_RULE_H_
#define _COMPOUND_NAME_IN_PARENS_RULE_H_

#include "ast.h"

typedef enum {
    COMPOUND_NAME_IN_PARENS_RULE_OK,
    COMPOUND_NAME_IN_PARENS_RULE_ERROR,
} CompoundNameInParensRuleType;

struct _compound_name_in_parens_rule_ {
    Ast ast;
    CompoundNameInParensRuleType type;
    CompoundName* compound_name;
};

CompoundNameInParensRule* createCompoundNameInParensRule(CompoundName*);
AstResult pass1CompoundNameInParensRule(CompoundNameInParensRule*);
AstResult pass2CompoundNameInParensRule(CompoundNameInParensRule*);
AstResult pass3CompoundNameInParensRule(CompoundNameInParensRule*);
AstResult emitCompoundNameInParensRule(CompoundNameInParensRule*);
AstResult destroyCompoundNameInParensRule(CompoundNameInParensRule*);

#ifdef ENABLE_DUMP
AstResult dumpCompoundNameInParensRule(CompoundNameInParensRule* ptr);
#endif

#endif
